"""Update license table naming

Revision ID: 478ba3409f2a
Revises: bacef8beb4df
Create Date: 2016-04-10 14:00:57.973649

"""

# revision identifiers, used by Alembic.
revision = '478ba3409f2a'
down_revision = 'bacef8beb4df'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'group_type', ['id'])
    op.add_column('groups', sa.Column('license_id', sa.Integer(), nullable=True))
    op.drop_constraint(u'groups_license_sign_up_fkey', 'groups', type_='foreignkey')
    op.create_foreign_key(None, 'groups', 'license_agreement', ['license_id'], ['id'])
    op.drop_column('groups', 'license_sign_up')
    op.add_column('signed_license_agreement', sa.Column('license_id', sa.Integer(), nullable=True))
    op.add_column('signed_license_agreement', sa.Column('person_id', sa.Integer(), nullable=True))
    op.drop_constraint(u'signed_license_agreement_people_fkey', 'signed_license_agreement', type_='foreignkey')
    op.drop_constraint(u'signed_license_agreement_license_fkey', 'signed_license_agreement', type_='foreignkey')
    op.create_foreign_key(None, 'signed_license_agreement', 'license_agreement', ['license_id'], ['id'])
    op.create_foreign_key(None, 'signed_license_agreement', 'people', ['person_id'], ['id'])
    op.drop_column('signed_license_agreement', 'signed')
    op.drop_column('signed_license_agreement', 'license')
    op.drop_column('signed_license_agreement', 'people')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('signed_license_agreement', sa.Column('people', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('signed_license_agreement', sa.Column('license', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('signed_license_agreement', sa.Column('signed', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'signed_license_agreement', type_='foreignkey')
    op.drop_constraint(None, 'signed_license_agreement', type_='foreignkey')
    op.create_foreign_key(u'signed_license_agreement_license_fkey', 'signed_license_agreement', 'license_agreement', ['license'], ['id'])
    op.create_foreign_key(u'signed_license_agreement_people_fkey', 'signed_license_agreement', 'people', ['people'], ['id'])
    op.drop_column('signed_license_agreement', 'person_id')
    op.drop_column('signed_license_agreement', 'license_id')
    op.add_column('groups', sa.Column('license_sign_up', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'groups', type_='foreignkey')
    op.create_foreign_key(u'groups_license_sign_up_fkey', 'groups', 'license_agreement', ['license_sign_up'], ['id'])
    op.drop_column('groups', 'license_id')
    op.drop_constraint(None, 'group_type', type_='unique')
    ### end Alembic commands ###
